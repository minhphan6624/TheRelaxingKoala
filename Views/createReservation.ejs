<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Reservations - Relaxing Koala Restaurant</title>

    <link rel="stylesheet" href="css/createReservation.css">
</head>

<body>
    <%- include('./Partials/navbar.ejs')%>

    <main>
        <h2>Make a Reservation</h2>
        <div class="reservation-form-container">
            <form id="reservation-form">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>

                <label for="contact">Contact Info:</label>
                <input type="text" id="contact" name="contact" required>

                <label for="date">Date:</label>
                <input type="date" id="date" name="date" required>

                <label for="time">Time:</label>
                <input type="time" id="time" name="time" required>

                <label for="num_people">Number of Guests:</label>
                <input type="number" id="num_people" name="num_people" required>

                <label for="requests">Special Requests:</label>
                <textarea id="requests" name="requests"></textarea>

                <button type="submit">Submit</button>
            </form>
        </div>
    </main>
    
    <%- include('./Partials/footer.ejs') %>

    <script>
        document.getElementById('reservation-form').addEventListener('submit', async (event) => {

            event.preventDefault();

            const formData = new FormData(event.target);

            //Create a new data object based on what is submitted to the form
            const data = {
                name: formData.get('name'),
                contact: formData.get('contact'),
                date: formData.get('date'),
                time: formData.get('time'),
                num_people: formData.get('num_people'),
                requests: formData.get('requests')
            };


            const response = await fetch('/api/reservation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                alert('Reservation made successfully!');
                event.target.reset();
            } else {
                alert('Error making reservation.');
            }
        });

        function deleteReservation(id) {
        if (confirm('Are you sure you want to delete this reservation?')) {
            fetch(`/api/reservations/${id}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert('Error: ' + data.error);
                } else {
                    alert('Reservation deleted successfully');
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the reservation.');
            });
        }
    }
    </script>
</body>

</html>